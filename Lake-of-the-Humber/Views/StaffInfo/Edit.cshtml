@model Lake_of_the_Humber.Models.ViewModels.UpdateStaff
@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "StaffInfo", new { id = Model.staffinfo.StaffID }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>StaffInfo</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.staffinfo.StaffID, new { Name = "StaffID" })

        <div class="form-group">
            @Html.LabelFor(model => model.staffinfo.StaffFirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.staffinfo.StaffFirstName, new { htmlAttributes = new { @class = "form-control", Name = "StaffFirstName" } })
                @Html.ValidationMessageFor(model => model.staffinfo.StaffFirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.staffinfo.StaffLastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.staffinfo.StaffLastName, new { htmlAttributes = new { @class = "form-control", Name = "StaffLastName" } })
                @Html.ValidationMessageFor(model => model.staffinfo.StaffLastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.staffinfo.StaffLanguage, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.staffinfo.StaffLanguage, new { htmlAttributes = new { @class = "form-control", Name = "StaffLanguage" } })
                @Html.ValidationMessageFor(model => model.staffinfo.StaffLanguage, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.staffinfo.StaffHasPic, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.staffinfo.StaffHasPic)
                    @Html.ValidationMessageFor(model => model.staffinfo.StaffHasPic, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.staffinfo.StaffImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.staffinfo.StaffImagePath, new { htmlAttributes = new { @class = "form-control", Name = "StaffImagePath" } })
                @Html.ValidationMessageFor(model => model.staffinfo.StaffImagePath, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.staffinfo.DepartmentID, "DepartmentID", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.staffinfo.DepartmentID, new { htmlAttributes = new { @class = "form-control", Name = "DepartmentID" } })
                @Html.ValidationMessageFor(model => model.staffinfo.DepartmentID, "", new { @class = "text-danger" })

                @*<select name="DepartmentID">
                        @foreach (var department in Model.alldepartments)
                        {
                            <option value="@department.DepartmentID">@department.DepartmentName</option>
                        }
                    </select>*@

                @*Html.DropDownList("DepartmentID", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.DepartmentId, "", new { @class = "text-danger" })*@
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.staffinfo.UserId, "UserId", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("UserId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.staffinfo.UserId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "List")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
